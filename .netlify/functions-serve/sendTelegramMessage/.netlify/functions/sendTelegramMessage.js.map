{
  "version": 3,
  "sources": ["../../../../../../Users/alexfedorov/Developer/GitHub/SoulDialogue/.netlify/functions/sendTelegramMessage.js"],
  "sourceRoot": "/var/folders/6g/dkb_c5ys2bq6wwrb0sr1cwkr0000gn/T/tmp-87944-p2D1HALrSyxw",
  "sourcesContent": ["export async function handler(event) {\n    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;\n    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;\n\n    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {\n        console.error(\"\u274C \u041E\u0448\u0438\u0431\u043A\u0430: \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435 \u043E\u043A\u0440\u0443\u0436\u0435\u043D\u0438\u044F \u043D\u0435 \u0437\u0430\u0434\u0430\u043D\u044B\");\n        return {\n            statusCode: 500,\n            body: JSON.stringify({ error: \"\u041F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435 \u043E\u043A\u0440\u0443\u0436\u0435\u043D\u0438\u044F \u043D\u0435 \u0437\u0430\u0434\u0430\u043D\u044B\" }),\n        };\n    }\n\n    let name = \"\";\n    let phone = \"\";\n    let message = \"\";\n\n    try {\n        const body = JSON.parse(event.body);\n        name = body.name || \"\";\n        phone = body.phone || \"\";\n        message = body.message || \"\";\n    } catch (err) {\n        console.error(\"\u274C \u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0430\u0440\u0441\u0438\u043D\u0433\u0430 \u0442\u0435\u043B\u0430 \u0437\u0430\u043F\u0440\u043E\u0441\u0430\", err);\n        return {\n            statusCode: 400,\n            body: JSON.stringify({ error: \"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u0437\u0430\u043F\u0440\u043E\u0441\u0430\" }),\n        };\n    }\n\n    const text = `\n  \uD83D\uDCDD \u041D\u043E\u0432\u0430\u044F \u0437\u0430\u044F\u0432\u043A\u0430 \u0441 \u0441\u0430\u0439\u0442\u0430 SoulDialogue\n  \n  \uD83D\uDCC6 ${new Date().toLocaleDateString(\"ru-RU\")}\n  \u23F0 ${new Date().toLocaleTimeString(\"ru-RU\").slice(0, 5)}\n  \n  \uD83D\uDC64 \u0418\u043C\u044F: ${name}\n  \uD83D\uDCDE \u0422\u0435\u043B\u0435\u0444\u043E\u043D: ${phone}\n  \u2709\uFE0F \u0421\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435: ${message}\n    `;\n\n    try {\n        const telegramRes = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                chat_id: TELEGRAM_CHAT_ID,\n                text,\n            }),\n        });\n\n        const result = await telegramRes.json();\n\n        if (!telegramRes.ok) {\n            console.error(\"\u274C \u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0432 Telegram:\", result);\n            return {\n                statusCode: telegramRes.status,\n                body: JSON.stringify({ error: \"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435\", details: result }),\n            };\n        }\n\n        return {\n            statusCode: 200,\n            body: JSON.stringify({ ok: true, result }),\n        };\n    } catch (error) {\n        console.error(\"\u274C \u0421\u0431\u043E\u0439 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0432 Telegram:\", error);\n        return {\n            statusCode: 500,\n            body: JSON.stringify({ error: \"\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438\", details: error.message }),\n        };\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB,QAAQ,OAAO;AACjC,QAAM,qBAAqB,QAAQ,IAAI;AACvC,QAAM,mBAAmB,QAAQ,IAAI;AAErC,MAAI,CAAC,sBAAsB,CAAC,kBAAkB;AAC1C,YAAQ,MAAM,oNAA0C;AACxD,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,wKAAiC,CAAC;AAAA,IACpE;AAAA,EACJ;AAEA,MAAI,OAAO;AACX,MAAI,QAAQ;AACZ,MAAI,UAAU;AAEd,MAAI;AACA,UAAM,OAAO,KAAK,MAAM,MAAM,IAAI;AAClC,WAAO,KAAK,QAAQ;AACpB,YAAQ,KAAK,SAAS;AACtB,cAAU,KAAK,WAAW;AAAA,EAC9B,SAAS,KAAK;AACV,YAAQ,MAAM,oKAAkC,GAAG;AACnD,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,mIAA0B,CAAC;AAAA,IAC7D;AAAA,EACJ;AAEA,QAAM,OAAO;AAAA;AAAA;AAAA,eAGV,oBAAI,KAAK,GAAE,mBAAmB,OAAO,CAAC;AAAA,YACvC,oBAAI,KAAK,GAAE,mBAAmB,OAAO,EAAE,MAAM,GAAG,CAAC,CAAC;AAAA;AAAA,kCAE5C,IAAI;AAAA,0DACA,KAAK;AAAA,yEACH,OAAO;AAAA;AAGrB,MAAI;AACA,UAAM,cAAc,MAAM,MAAM,+BAA+B,kBAAkB,gBAAgB;AAAA,MAC7F,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU;AAAA,QACjB,SAAS;AAAA,QACT;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAED,UAAM,SAAS,MAAM,YAAY,KAAK;AAEtC,QAAI,CAAC,YAAY,IAAI;AACjB,cAAQ,MAAM,oIAAqC,MAAM;AACzD,aAAO;AAAA,QACH,YAAY,YAAY;AAAA,QACxB,MAAM,KAAK,UAAU,EAAE,OAAO,yKAAkC,SAAS,OAAO,CAAC;AAAA,MACrF;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,IAAI,MAAM,OAAO,CAAC;AAAA,IAC7C;AAAA,EACJ,SAAS,OAAO;AACZ,YAAQ,MAAM,wHAAmC,KAAK;AACtD,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,yFAAmB,SAAS,MAAM,QAAQ,CAAC;AAAA,IAC7E;AAAA,EACJ;AACJ;",
  "names": []
}
