const fetch = require('node-fetch');

exports.handler = async (event) => {
    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

    console.log('TELEGRAM_BOT_TOKEN:', TELEGRAM_BOT_TOKEN);
    console.log('TELEGRAM_CHAT_ID:', TELEGRAM_CHAT_ID);

    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
        return {
            statusCode: 500,
            body: JSON.stringify({ error: '‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–¥–∞–Ω—ã' }),
        };
    }

    let data;
    try {
        data = JSON.parse(event.body);
        console.log('üì¶ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã:', data);
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
        return {
            statusCode: 400,
            body: JSON.stringify({ error: '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON' }),
        };
    }

    const { name, phone, message } = data;

    const text =
        `üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\n\n` +
        `üìÜ ${new Date().toLocaleDateString('ru-RU')}\n` +
        `‚è∞ ${new Date().toLocaleTimeString('ru-RU').slice(0, 5)}\n\n` +
        `üë§ –ò–º—è: ${name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n` +
        `‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: ${message || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`;

    try {
        const telegramRes = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text,
            }),
        });

        const result = await telegramRes.json();
        console.log('‚úÖ –û—Ç–≤–µ—Ç Telegram:', result);

        if (!result.ok) {
            throw new Error(result.description);
        }

        return {
            statusCode: 200,
            body: JSON.stringify({ ok: true, result }),
        };
    } catch (err) {
        console.error('üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', err);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: err.message }),
        };
    }
};
